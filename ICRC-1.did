type SubAccount = blob;

type TransferArgs = record {
    from_subaccount: opt SubAccount;
    to_principal: principal;
    to_subaccount: opt SubAccount;
    amount: nat64;
};

type TransferError = variant {
    // TODO
    GenericError: text;
};

type NotifyArgs = record {
    block_index: nat64;
    from_subaccount: opt SubAccount;
    to_principal: principal;
    to_subaccount: opt SubAccount;
};

type NotifyError = variant {
    // TODO
    GenericError: text;
};

service : {
    name: () -> (text) query;
    symbol: () -> (text) query;
    decimals: () -> (nat32) query;
    totalSupply: () -> (nat32) query;
    balanceOf: (record { principal; SubAccount; }) -> (nat64) query;
    transfer: (TransferArgs) -> (variant { Ok: nat64; Err: TransferError; });
    notify: (NotifyArgs) -> (variant { Ok; Err: NotifyError; });
}
